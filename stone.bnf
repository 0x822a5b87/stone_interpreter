primary     ::= ("fun" param_list block | "(" expr ")" | NUMBER | IDENTIFIER | STRING) { postfix }
factor      ::= "-" primary | primary
expr        ::= factor { OP factor }
block       ::= "{" [ statement ] {(";" | EOL) [ statement ]} "}"
statement   ::= "if" expr block ["else" block]
                      | "while" expr block
                      | simple
param       ::= IDENTIFIER
params      ::= IDENTIFIER { "," param }
param_list  ::= "(" [ params ] ")"
def         ::= "def" IDENTIFIER param_list block
args        ::= expr { "," expr }
simple      ::= expr [ args ]
member      ::= def | simple
class_body  ::= "{" [ member] { (";" | EOL) | [ member ] } "}"
defClass    ::= "class" IDENTIFIER [ "extends" IDENTIFIER] class_body
postfix     ::= "." IDENTIFIER | "(" args ")"
program     ::= [ def | statement | defClass ] ( ";" | EOL )
